name: Backend - Incident Report API
run-name: '[incident-report-api]${{ github.actor }} has made changes on branch ${{ github.ref_name }}'

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - '.github/workflows/**'
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - run: npm ci
        working-directory: .
      - run: npm run lint
        working-directory: .

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - run: npm ci
        working-directory: .
      - run: npm run test
        working-directory: .

  sync:
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Add GitLab remote
        run: git remote add gitlab ${{ secrets.GITLAB_REPO_URL }}

      - name: Push to GitLab
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        run: |
          git push gitlab HEAD:main # Cambia 'main' si usas otra rama principal


  # release-image:
  # if: ${{ github.ref_name }} == 'main' && ${{ github.event_name }} == 'push'
  #   needs: [lint, test]
  #   runs-on: ubuntu-latest
  #   env:
  #     IMAGE_URL: docker.io/oviedossj/wai-incident-report-api:latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Login to github repository
  #       uses: docker/login-action@v2
  #       with:
  #         registry: docker.io
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
  #     - run: docker build -t ${{ env.IMAGE_URL }} .
  #     - run: docker push ${{ env.IMAGE_URL }}
